{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/dell/Desktop/meteor-vue-element-ui/node_modules/element-ui/packages/table/src/table.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/dell/Desktop/meteor-vue-element-ui/node_modules/element-ui/packages/table/src/table.vue","filename":"/home/dell/Desktop/meteor-vue-element-ui/node_modules/element-ui/packages/table/src/table.vue","passPerPreset":false,"envName":"development","cwd":"/home/dell/Desktop/meteor-vue-element-ui","root":"/home/dell/Desktop/meteor-vue-element-ui","generatorOpts":{"filename":"/home/dell/Desktop/meteor-vue-element-ui/node_modules/element-ui/packages/table/src/table.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/dell/Desktop/meteor-vue-element-ui/node_modules/element-ui/packages/table/src/table.vue"}},"code":"var ElCheckbox;\nmodule.link(\"element-ui/packages/checkbox\", {\n  \"default\": function (v) {\n    ElCheckbox = v;\n  }\n}, 0);\nvar debounce;\nmodule.link(\"throttle-debounce/debounce\", {\n  \"default\": function (v) {\n    debounce = v;\n  }\n}, 1);\nvar addResizeListener, removeResizeListener;\nmodule.link(\"element-ui/src/utils/resize-event\", {\n  addResizeListener: function (v) {\n    addResizeListener = v;\n  },\n  removeResizeListener: function (v) {\n    removeResizeListener = v;\n  }\n}, 2);\nvar Mousewheel;\nmodule.link(\"element-ui/src/directives/mousewheel\", {\n  \"default\": function (v) {\n    Mousewheel = v;\n  }\n}, 3);\nvar Locale;\nmodule.link(\"element-ui/src/mixins/locale\", {\n  \"default\": function (v) {\n    Locale = v;\n  }\n}, 4);\nvar Migrating;\nmodule.link(\"element-ui/src/mixins/migrating\", {\n  \"default\": function (v) {\n    Migrating = v;\n  }\n}, 5);\nvar TableStore;\nmodule.link(\"./table-store\", {\n  \"default\": function (v) {\n    TableStore = v;\n  }\n}, 6);\nvar TableLayout;\nmodule.link(\"./table-layout\", {\n  \"default\": function (v) {\n    TableLayout = v;\n  }\n}, 7);\nvar TableBody;\nmodule.link(\"./table-body\", {\n  \"default\": function (v) {\n    TableBody = v;\n  }\n}, 8);\nvar TableHeader;\nmodule.link(\"./table-header\", {\n  \"default\": function (v) {\n    TableHeader = v;\n  }\n}, 9);\nvar TableFooter;\nmodule.link(\"./table-footer\", {\n  \"default\": function (v) {\n    TableFooter = v;\n  }\n}, 10);\nvar getRowIdentity;\nmodule.link(\"./util\", {\n  getRowIdentity: function (v) {\n    getRowIdentity = v;\n  }\n}, 11);\n\nvar flattenData = function (data) {\n  if (!data) return data;\n  var newData = [];\n\n  var flatten = function (arr) {\n    arr.forEach(function (item) {\n      newData.push(item);\n\n      if (Array.isArray(item.children)) {\n        flatten(item.children);\n      }\n    });\n  };\n\n  flatten(data);\n\n  if (data.length === newData.length) {\n    return data;\n  } else {\n    return newData;\n  }\n};\n\nvar tableIdSeed = 1;\nmodule.exportDefault({\n  name: 'ElTable',\n  mixins: [Locale, Migrating],\n  directives: {\n    Mousewheel: Mousewheel\n  },\n  props: {\n    data: {\n      type: Array,\n      \"default\": function () {\n        return [];\n      }\n    },\n    size: String,\n    width: [String, Number],\n    height: [String, Number],\n    maxHeight: [String, Number],\n    fit: {\n      type: Boolean,\n      \"default\": true\n    },\n    stripe: Boolean,\n    border: Boolean,\n    rowKey: [String, Function],\n    context: {},\n    showHeader: {\n      type: Boolean,\n      \"default\": true\n    },\n    showSummary: Boolean,\n    sumText: String,\n    summaryMethod: Function,\n    rowClassName: [String, Function],\n    rowStyle: [Object, Function],\n    cellClassName: [String, Function],\n    cellStyle: [Object, Function],\n    headerRowClassName: [String, Function],\n    headerRowStyle: [Object, Function],\n    headerCellClassName: [String, Function],\n    headerCellStyle: [Object, Function],\n    highlightCurrentRow: Boolean,\n    currentRowKey: [String, Number],\n    emptyText: String,\n    expandRowKeys: Array,\n    defaultExpandAll: Boolean,\n    defaultSort: Object,\n    tooltipEffect: String,\n    spanMethod: Function,\n    selectOnIndeterminate: {\n      type: Boolean,\n      \"default\": true\n    },\n    indent: {\n      type: Number,\n      \"default\": 16\n    },\n    lazy: Boolean,\n    load: Function\n  },\n  components: {\n    TableHeader: TableHeader,\n    TableFooter: TableFooter,\n    TableBody: TableBody,\n    ElCheckbox: ElCheckbox\n  },\n  methods: {\n    getMigratingConfig: function () {\n      return {\n        events: {\n          expand: 'expand is renamed to expand-change'\n        }\n      };\n    },\n    setCurrentRow: function (row) {\n      this.store.commit('setCurrentRow', row);\n    },\n    toggleRowSelection: function (row, selected) {\n      this.store.toggleRowSelection(row, selected);\n      this.store.updateAllSelected();\n    },\n    toggleRowExpansion: function (row, expanded) {\n      this.store.toggleRowExpansion(row, expanded);\n    },\n    clearSelection: function () {\n      this.store.clearSelection();\n    },\n    clearFilter: function (columnKeys) {\n      this.store.clearFilter(columnKeys);\n    },\n    clearSort: function () {\n      this.store.clearSort();\n    },\n    handleMouseLeave: function () {\n      this.store.commit('setHoverRow', null);\n      if (this.hoverState) this.hoverState = null;\n    },\n    updateScrollY: function () {\n      this.layout.updateScrollY();\n      this.layout.updateColumnsWidth();\n    },\n    handleFixedMousewheel: function (event, data) {\n      var bodyWrapper = this.bodyWrapper;\n\n      if (Math.abs(data.spinY) > 0) {\n        var currentScrollTop = bodyWrapper.scrollTop;\n\n        if (data.pixelY < 0 && currentScrollTop !== 0) {\n          event.preventDefault();\n        }\n\n        if (data.pixelY > 0 && bodyWrapper.scrollHeight - bodyWrapper.clientHeight > currentScrollTop) {\n          event.preventDefault();\n        }\n\n        bodyWrapper.scrollTop += Math.ceil(data.pixelY / 5);\n      } else {\n        bodyWrapper.scrollLeft += Math.ceil(data.pixelX / 5);\n      }\n    },\n    handleHeaderFooterMousewheel: function (event, data) {\n      var pixelX = data.pixelX,\n          pixelY = data.pixelY;\n\n      if (Math.abs(pixelX) >= Math.abs(pixelY)) {\n        event.preventDefault();\n        this.bodyWrapper.scrollLeft += data.pixelX / 5;\n      }\n    },\n    bindEvents: function () {\n      var _this$$refs = this.$refs,\n          headerWrapper = _this$$refs.headerWrapper,\n          footerWrapper = _this$$refs.footerWrapper;\n      var refs = this.$refs;\n      var self = this;\n      this.bodyWrapper.addEventListener('scroll', function () {\n        if (headerWrapper) headerWrapper.scrollLeft = this.scrollLeft;\n        if (footerWrapper) footerWrapper.scrollLeft = this.scrollLeft;\n        if (refs.fixedBodyWrapper) refs.fixedBodyWrapper.scrollTop = this.scrollTop;\n        if (refs.rightFixedBodyWrapper) refs.rightFixedBodyWrapper.scrollTop = this.scrollTop;\n        var maxScrollLeftPosition = this.scrollWidth - this.offsetWidth - 1;\n        var scrollLeft = this.scrollLeft;\n\n        if (scrollLeft >= maxScrollLeftPosition) {\n          self.scrollPosition = 'right';\n        } else if (scrollLeft === 0) {\n          self.scrollPosition = 'left';\n        } else {\n          self.scrollPosition = 'middle';\n        }\n      });\n\n      if (this.fit) {\n        addResizeListener(this.$el, this.resizeListener);\n      }\n    },\n    resizeListener: function () {\n      if (!this.$ready) return;\n      var shouldUpdateLayout = false;\n      var el = this.$el;\n      var _this$resizeState = this.resizeState,\n          oldWidth = _this$resizeState.width,\n          oldHeight = _this$resizeState.height;\n      var width = el.offsetWidth;\n\n      if (oldWidth !== width) {\n        shouldUpdateLayout = true;\n      }\n\n      var height = el.offsetHeight;\n\n      if ((this.height || this.shouldUpdateHeight) && oldHeight !== height) {\n        shouldUpdateLayout = true;\n      }\n\n      if (shouldUpdateLayout) {\n        this.resizeState.width = width;\n        this.resizeState.height = height;\n        this.doLayout();\n      }\n    },\n    doLayout: function () {\n      this.layout.updateColumnsWidth();\n\n      if (this.shouldUpdateHeight) {\n        this.layout.updateElsHeight();\n      }\n    },\n    sort: function (prop, order) {\n      this.store.commit('sort', {\n        prop: prop,\n        order: order\n      });\n    },\n    toggleAllSelection: function () {\n      this.store.commit('toggleAllSelection');\n    },\n    getRowKey: function (row) {\n      var rowKey = getRowIdentity(row, this.store.states.rowKey);\n\n      if (!rowKey) {\n        throw new Error('if there\\'s nested data, rowKey is required.');\n      }\n\n      return rowKey;\n    },\n    getTableTreeData: function (data) {\n      var _this = this;\n\n      var treeData = {};\n\n      var traverse = function (children, parentData, level) {\n        children.forEach(function (item) {\n          var rowKey = _this.getRowKey(item);\n\n          treeData[rowKey] = {\n            display: false,\n            level: level\n          };\n          parentData.children.push(rowKey);\n\n          if (Array.isArray(item.children) && item.children.length) {\n            treeData[rowKey].children = [];\n            treeData[rowKey].expanded = false;\n            traverse(item.children, treeData[rowKey], level + 1);\n          }\n        });\n      };\n\n      if (data) {\n        data.forEach(function (item) {\n          var containChildren = Array.isArray(item.children) && item.children.length;\n          if (!(containChildren || item.hasChildren)) return;\n\n          var rowKey = _this.getRowKey(item);\n\n          var treeNode = {\n            level: 0,\n            expanded: false,\n            display: true,\n            children: []\n          };\n\n          if (containChildren) {\n            treeData[rowKey] = treeNode;\n            traverse(item.children, treeData[rowKey], 1);\n          } else if (item.hasChildren && _this.lazy) {\n            treeNode.hasChildren = true;\n            treeNode.loaded = false;\n            treeData[rowKey] = treeNode;\n          }\n        });\n      }\n\n      return treeData;\n    }\n  },\n  created: function () {\n    var _this2 = this;\n\n    this.tableId = 'el-table_' + tableIdSeed++;\n    this.debouncedUpdateLayout = debounce(50, function () {\n      return _this2.doLayout();\n    });\n  },\n  computed: {\n    tableSize: function () {\n      return this.size || (this.$ELEMENT || {}).size;\n    },\n    bodyWrapper: function () {\n      return this.$refs.bodyWrapper;\n    },\n    shouldUpdateHeight: function () {\n      return this.height || this.maxHeight || this.fixedColumns.length > 0 || this.rightFixedColumns.length > 0;\n    },\n    selection: function () {\n      return this.store.states.selection;\n    },\n    columns: function () {\n      return this.store.states.columns;\n    },\n    tableData: function () {\n      return this.store.states.data;\n    },\n    fixedColumns: function () {\n      return this.store.states.fixedColumns;\n    },\n    rightFixedColumns: function () {\n      return this.store.states.rightFixedColumns;\n    },\n    bodyWidth: function () {\n      var _this$layout = this.layout,\n          bodyWidth = _this$layout.bodyWidth,\n          scrollY = _this$layout.scrollY,\n          gutterWidth = _this$layout.gutterWidth;\n      return bodyWidth ? bodyWidth - (scrollY ? gutterWidth : 0) + 'px' : '';\n    },\n    bodyHeight: function () {\n      if (this.height) {\n        return {\n          height: this.layout.bodyHeight ? this.layout.bodyHeight + 'px' : ''\n        };\n      } else if (this.maxHeight) {\n        return {\n          'max-height': (this.showHeader ? this.maxHeight - this.layout.headerHeight - this.layout.footerHeight : this.maxHeight - this.layout.footerHeight) + 'px'\n        };\n      }\n\n      return {};\n    },\n    fixedBodyHeight: function () {\n      if (this.height) {\n        return {\n          height: this.layout.fixedBodyHeight ? this.layout.fixedBodyHeight + 'px' : ''\n        };\n      } else if (this.maxHeight) {\n        var maxHeight = this.layout.scrollX ? this.maxHeight - this.layout.gutterWidth : this.maxHeight;\n\n        if (this.showHeader) {\n          maxHeight -= this.layout.headerHeight;\n        }\n\n        maxHeight -= this.layout.footerHeight;\n        return {\n          'max-height': maxHeight + 'px'\n        };\n      }\n\n      return {};\n    },\n    fixedHeight: function () {\n      if (this.maxHeight) {\n        if (this.showSummary) {\n          return {\n            bottom: 0\n          };\n        }\n\n        return {\n          bottom: this.layout.scrollX && this.data.length ? this.layout.gutterWidth + 'px' : ''\n        };\n      } else {\n        if (this.showSummary) {\n          return {\n            height: this.layout.tableHeight ? this.layout.tableHeight + 'px' : ''\n          };\n        }\n\n        return {\n          height: this.layout.viewportHeight ? this.layout.viewportHeight + 'px' : ''\n        };\n      }\n    }\n  },\n  watch: {\n    height: {\n      immediate: true,\n      handler: function (value) {\n        this.layout.setHeight(value);\n      }\n    },\n    maxHeight: {\n      immediate: true,\n      handler: function (value) {\n        this.layout.setMaxHeight(value);\n      }\n    },\n    currentRowKey: function (newVal) {\n      this.store.setCurrentRowKey(newVal);\n    },\n    data: {\n      immediate: true,\n      handler: function (value) {\n        var _this3 = this;\n\n        this.store.states.treeData = this.getTableTreeData(value);\n        value = flattenData(value);\n        this.store.commit('setData', value);\n\n        if (this.$ready) {\n          this.$nextTick(function () {\n            _this3.doLayout();\n          });\n        }\n      }\n    },\n    expandRowKeys: {\n      immediate: true,\n      handler: function (newVal) {\n        if (newVal) {\n          this.store.setExpandRowKeys(newVal);\n        }\n      }\n    }\n  },\n  destroyed: function () {\n    if (this.resizeListener) removeResizeListener(this.$el, this.resizeListener);\n  },\n  mounted: function () {\n    var _this4 = this;\n\n    this.bindEvents();\n    this.store.updateColumns();\n    this.doLayout();\n    this.resizeState = {\n      width: this.$el.offsetWidth,\n      height: this.$el.offsetHeight\n    }; // init filters\n\n    this.store.states.columns.forEach(function (column) {\n      if (column.filteredValue && column.filteredValue.length) {\n        _this4.store.commit('filterChange', {\n          column: column,\n          values: column.filteredValue,\n          silent: true\n        });\n      }\n    });\n    this.$ready = true;\n  },\n  data: function () {\n    var store = new TableStore(this, {\n      rowKey: this.rowKey,\n      defaultExpandAll: this.defaultExpandAll,\n      selectOnIndeterminate: this.selectOnIndeterminate,\n      indent: this.indent,\n      lazy: this.lazy\n    });\n    var layout = new TableLayout({\n      store: store,\n      table: this,\n      fit: this.fit,\n      showHeader: this.showHeader\n    });\n    return {\n      layout: layout,\n      store: store,\n      isHidden: false,\n      renderExpanded: null,\n      resizeProxyVisible: false,\n      resizeState: {\n        width: null,\n        height: null\n      },\n      // 是否拥有多级表头\n      isGroup: false,\n      scrollPosition: 'left'\n    };\n  }\n});","map":{"version":3,"sources":["/home/dell/Desktop/meteor-vue-element-ui/node_modules/element-ui/packages/table/src/table.vue"],"names":["ElCheckbox","module","link","v","debounce","addResizeListener","removeResizeListener","Mousewheel","Locale","Migrating","TableStore","TableLayout","TableBody","TableHeader","TableFooter","getRowIdentity","flattenData","data","newData","flatten","arr","forEach","item","push","Array","isArray","children","length","tableIdSeed","exportDefault","name","mixins","directives","props","type","size","String","width","Number","height","maxHeight","fit","Boolean","stripe","border","rowKey","Function","context","showHeader","showSummary","sumText","summaryMethod","rowClassName","rowStyle","Object","cellClassName","cellStyle","headerRowClassName","headerRowStyle","headerCellClassName","headerCellStyle","highlightCurrentRow","currentRowKey","emptyText","expandRowKeys","defaultExpandAll","defaultSort","tooltipEffect","spanMethod","selectOnIndeterminate","indent","lazy","load","components","methods","getMigratingConfig","events","expand","setCurrentRow","row","store","commit","toggleRowSelection","selected","updateAllSelected","toggleRowExpansion","expanded","clearSelection","clearFilter","columnKeys","clearSort","handleMouseLeave","hoverState","updateScrollY","layout","updateColumnsWidth","handleFixedMousewheel","event","bodyWrapper","Math","abs","spinY","currentScrollTop","scrollTop","pixelY","preventDefault","scrollHeight","clientHeight","ceil","scrollLeft","pixelX","handleHeaderFooterMousewheel","bindEvents","$refs","headerWrapper","footerWrapper","refs","self","addEventListener","fixedBodyWrapper","rightFixedBodyWrapper","maxScrollLeftPosition","scrollWidth","offsetWidth","scrollPosition","$el","resizeListener","$ready","shouldUpdateLayout","el","resizeState","oldWidth","oldHeight","offsetHeight","shouldUpdateHeight","doLayout","updateElsHeight","sort","prop","order","toggleAllSelection","getRowKey","states","Error","getTableTreeData","treeData","traverse","parentData","level","display","containChildren","hasChildren","treeNode","loaded","created","tableId","debouncedUpdateLayout","computed","tableSize","$ELEMENT","fixedColumns","rightFixedColumns","selection","columns","tableData","bodyWidth","scrollY","gutterWidth","bodyHeight","headerHeight","footerHeight","fixedBodyHeight","scrollX","fixedHeight","bottom","tableHeight","viewportHeight","watch","immediate","handler","value","setHeight","setMaxHeight","newVal","setCurrentRowKey","$nextTick","setExpandRowKeys","destroyed","mounted","updateColumns","column","filteredValue","values","silent","table","isHidden","renderExpanded","resizeProxyVisible","isGroup"],"mappings":"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","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n  import ElCheckbox from 'element-ui/packages/checkbox';\n  import debounce from 'throttle-debounce/debounce';\n  import { addResizeListener, removeResizeListener } from 'element-ui/src/utils/resize-event';\n  import Mousewheel from 'element-ui/src/directives/mousewheel';\n  import Locale from 'element-ui/src/mixins/locale';\n  import Migrating from 'element-ui/src/mixins/migrating';\n  import TableStore from './table-store';\n  import TableLayout from './table-layout';\n  import TableBody from './table-body';\n  import TableHeader from './table-header';\n  import TableFooter from './table-footer';\n  import { getRowIdentity } from './util';\n\n  const flattenData = function(data) {\n    if (!data) return data;\n    let newData = [];\n    const flatten = arr => {\n      arr.forEach((item) => {\n        newData.push(item);\n        if (Array.isArray(item.children)) {\n          flatten(item.children);\n        }\n      });\n    };\n    flatten(data);\n    if (data.length === newData.length) {\n      return data;\n    } else {\n      return newData;\n    }\n  };\n\n  let tableIdSeed = 1;\n\n  export default {\n    name: 'ElTable',\n\n    mixins: [Locale, Migrating],\n\n    directives: {\n      Mousewheel\n    },\n\n    props: {\n      data: {\n        type: Array,\n        default: function() {\n          return [];\n        }\n      },\n\n      size: String,\n\n      width: [String, Number],\n\n      height: [String, Number],\n\n      maxHeight: [String, Number],\n\n      fit: {\n        type: Boolean,\n        default: true\n      },\n\n      stripe: Boolean,\n\n      border: Boolean,\n\n      rowKey: [String, Function],\n\n      context: {},\n\n      showHeader: {\n        type: Boolean,\n        default: true\n      },\n\n      showSummary: Boolean,\n\n      sumText: String,\n\n      summaryMethod: Function,\n\n      rowClassName: [String, Function],\n\n      rowStyle: [Object, Function],\n\n      cellClassName: [String, Function],\n\n      cellStyle: [Object, Function],\n\n      headerRowClassName: [String, Function],\n\n      headerRowStyle: [Object, Function],\n\n      headerCellClassName: [String, Function],\n\n      headerCellStyle: [Object, Function],\n\n      highlightCurrentRow: Boolean,\n\n      currentRowKey: [String, Number],\n\n      emptyText: String,\n\n      expandRowKeys: Array,\n\n      defaultExpandAll: Boolean,\n\n      defaultSort: Object,\n\n      tooltipEffect: String,\n\n      spanMethod: Function,\n\n      selectOnIndeterminate: {\n        type: Boolean,\n        default: true\n      },\n\n      indent: {\n        type: Number,\n        default: 16\n      },\n\n      lazy: Boolean,\n\n      load: Function\n    },\n\n    components: {\n      TableHeader,\n      TableFooter,\n      TableBody,\n      ElCheckbox\n    },\n\n    methods: {\n      getMigratingConfig() {\n        return {\n          events: {\n            expand: 'expand is renamed to expand-change'\n          }\n        };\n      },\n\n      setCurrentRow(row) {\n        this.store.commit('setCurrentRow', row);\n      },\n\n      toggleRowSelection(row, selected) {\n        this.store.toggleRowSelection(row, selected);\n        this.store.updateAllSelected();\n      },\n\n      toggleRowExpansion(row, expanded) {\n        this.store.toggleRowExpansion(row, expanded);\n      },\n\n      clearSelection() {\n        this.store.clearSelection();\n      },\n\n      clearFilter(columnKeys) {\n        this.store.clearFilter(columnKeys);\n      },\n\n      clearSort() {\n        this.store.clearSort();\n      },\n\n      handleMouseLeave() {\n        this.store.commit('setHoverRow', null);\n        if (this.hoverState) this.hoverState = null;\n      },\n\n      updateScrollY() {\n        this.layout.updateScrollY();\n        this.layout.updateColumnsWidth();\n      },\n\n      handleFixedMousewheel(event, data) {\n        const bodyWrapper = this.bodyWrapper;\n        if (Math.abs(data.spinY) > 0) {\n          const currentScrollTop = bodyWrapper.scrollTop;\n          if (data.pixelY < 0 && currentScrollTop !== 0) {\n            event.preventDefault();\n          }\n          if (data.pixelY > 0 && bodyWrapper.scrollHeight - bodyWrapper.clientHeight > currentScrollTop) {\n            event.preventDefault();\n          }\n          bodyWrapper.scrollTop += Math.ceil(data.pixelY / 5);\n        } else {\n          bodyWrapper.scrollLeft += Math.ceil(data.pixelX / 5);\n        }\n      },\n\n      handleHeaderFooterMousewheel(event, data) {\n        const { pixelX, pixelY } = data;\n        if (Math.abs(pixelX) >= Math.abs(pixelY)) {\n          event.preventDefault();\n          this.bodyWrapper.scrollLeft += data.pixelX / 5;\n        }\n      },\n\n      bindEvents() {\n        const { headerWrapper, footerWrapper } = this.$refs;\n        const refs = this.$refs;\n        let self = this;\n\n        this.bodyWrapper.addEventListener('scroll', function() {\n          if (headerWrapper) headerWrapper.scrollLeft = this.scrollLeft;\n          if (footerWrapper) footerWrapper.scrollLeft = this.scrollLeft;\n          if (refs.fixedBodyWrapper) refs.fixedBodyWrapper.scrollTop = this.scrollTop;\n          if (refs.rightFixedBodyWrapper) refs.rightFixedBodyWrapper.scrollTop = this.scrollTop;\n          const maxScrollLeftPosition = this.scrollWidth - this.offsetWidth - 1;\n          const scrollLeft = this.scrollLeft;\n          if (scrollLeft >= maxScrollLeftPosition) {\n            self.scrollPosition = 'right';\n          } else if (scrollLeft === 0) {\n            self.scrollPosition = 'left';\n          } else {\n            self.scrollPosition = 'middle';\n          }\n        });\n\n        if (this.fit) {\n          addResizeListener(this.$el, this.resizeListener);\n        }\n      },\n\n      resizeListener() {\n        if (!this.$ready) return;\n        let shouldUpdateLayout = false;\n        const el = this.$el;\n        const { width: oldWidth, height: oldHeight } = this.resizeState;\n\n        const width = el.offsetWidth;\n        if (oldWidth !== width) {\n          shouldUpdateLayout = true;\n        }\n\n        const height = el.offsetHeight;\n        if ((this.height || this.shouldUpdateHeight) && oldHeight !== height) {\n          shouldUpdateLayout = true;\n        }\n\n        if (shouldUpdateLayout) {\n          this.resizeState.width = width;\n          this.resizeState.height = height;\n          this.doLayout();\n        }\n      },\n\n      doLayout() {\n        this.layout.updateColumnsWidth();\n        if (this.shouldUpdateHeight) {\n          this.layout.updateElsHeight();\n        }\n      },\n\n      sort(prop, order) {\n        this.store.commit('sort', { prop, order });\n      },\n\n      toggleAllSelection() {\n        this.store.commit('toggleAllSelection');\n      },\n\n      getRowKey(row) {\n        const rowKey = getRowIdentity(row, this.store.states.rowKey);\n        if (!rowKey) {\n          throw new Error('if there\\'s nested data, rowKey is required.');\n        }\n        return rowKey;\n      },\n\n      getTableTreeData(data) {\n        const treeData = {};\n        const traverse = (children, parentData, level) => {\n          children.forEach(item => {\n            const rowKey = this.getRowKey(item);\n            treeData[rowKey] = {\n              display: false,\n              level\n            };\n            parentData.children.push(rowKey);\n            if (Array.isArray(item.children) && item.children.length) {\n              treeData[rowKey].children = [];\n              treeData[rowKey].expanded = false;\n              traverse(item.children, treeData[rowKey], level + 1);\n            }\n          });\n        };\n        if (data) {\n          data.forEach(item => {\n            const containChildren = Array.isArray(item.children) && item.children.length;\n            if (!(containChildren || item.hasChildren)) return;\n            const rowKey = this.getRowKey(item);\n            const treeNode = {\n              level: 0,\n              expanded: false,\n              display: true,\n              children: []\n            };\n            if (containChildren) {\n              treeData[rowKey] = treeNode;\n              traverse(item.children, treeData[rowKey], 1);\n            } else if (item.hasChildren && this.lazy) {\n              treeNode.hasChildren = true;\n              treeNode.loaded = false;\n              treeData[rowKey] = treeNode;\n            }\n          });\n        }\n        return treeData;\n      }\n    },\n\n    created() {\n      this.tableId = 'el-table_' + tableIdSeed++;\n      this.debouncedUpdateLayout = debounce(50, () => this.doLayout());\n    },\n\n    computed: {\n      tableSize() {\n        return this.size || (this.$ELEMENT || {}).size;\n      },\n\n      bodyWrapper() {\n        return this.$refs.bodyWrapper;\n      },\n\n      shouldUpdateHeight() {\n        return this.height ||\n          this.maxHeight ||\n          this.fixedColumns.length > 0 ||\n          this.rightFixedColumns.length > 0;\n      },\n\n      selection() {\n        return this.store.states.selection;\n      },\n\n      columns() {\n        return this.store.states.columns;\n      },\n\n      tableData() {\n        return this.store.states.data;\n      },\n\n      fixedColumns() {\n        return this.store.states.fixedColumns;\n      },\n\n      rightFixedColumns() {\n        return this.store.states.rightFixedColumns;\n      },\n\n      bodyWidth() {\n        const { bodyWidth, scrollY, gutterWidth } = this.layout;\n        return bodyWidth ? bodyWidth - (scrollY ? gutterWidth : 0) + 'px' : '';\n      },\n\n      bodyHeight() {\n        if (this.height) {\n          return {\n            height: this.layout.bodyHeight ? this.layout.bodyHeight + 'px' : ''\n          };\n        } else if (this.maxHeight) {\n          return {\n            'max-height': (this.showHeader\n              ? this.maxHeight - this.layout.headerHeight - this.layout.footerHeight\n              : this.maxHeight - this.layout.footerHeight) + 'px'\n          };\n        }\n        return {};\n      },\n\n      fixedBodyHeight() {\n        if (this.height) {\n          return {\n            height: this.layout.fixedBodyHeight ? this.layout.fixedBodyHeight + 'px' : ''\n          };\n        } else if (this.maxHeight) {\n          let maxHeight = this.layout.scrollX ? this.maxHeight - this.layout.gutterWidth : this.maxHeight;\n\n          if (this.showHeader) {\n            maxHeight -= this.layout.headerHeight;\n          }\n\n          maxHeight -= this.layout.footerHeight;\n\n          return {\n            'max-height': maxHeight + 'px'\n          };\n        }\n\n        return {};\n      },\n\n      fixedHeight() {\n        if (this.maxHeight) {\n          if (this.showSummary) {\n            return {\n              bottom: 0\n            };\n          }\n          return {\n            bottom: (this.layout.scrollX && this.data.length) ? this.layout.gutterWidth + 'px' : ''\n          };\n        } else {\n          if (this.showSummary) {\n            return {\n              height: this.layout.tableHeight ? this.layout.tableHeight + 'px' : ''\n            };\n          }\n          return {\n            height: this.layout.viewportHeight ? this.layout.viewportHeight + 'px' : ''\n          };\n        }\n      }\n    },\n\n    watch: {\n      height: {\n        immediate: true,\n        handler(value) {\n          this.layout.setHeight(value);\n        }\n      },\n\n      maxHeight: {\n        immediate: true,\n        handler(value) {\n          this.layout.setMaxHeight(value);\n        }\n      },\n\n      currentRowKey(newVal) {\n        this.store.setCurrentRowKey(newVal);\n      },\n\n      data: {\n        immediate: true,\n        handler(value) {\n          this.store.states.treeData = this.getTableTreeData(value);\n          value = flattenData(value);\n          this.store.commit('setData', value);\n          if (this.$ready) {\n            this.$nextTick(() => {\n              this.doLayout();\n            });\n          }\n        }\n      },\n\n      expandRowKeys: {\n        immediate: true,\n        handler(newVal) {\n          if (newVal) {\n            this.store.setExpandRowKeys(newVal);\n          }\n        }\n      }\n    },\n\n    destroyed() {\n      if (this.resizeListener) removeResizeListener(this.$el, this.resizeListener);\n    },\n\n    mounted() {\n      this.bindEvents();\n      this.store.updateColumns();\n      this.doLayout();\n\n      this.resizeState = {\n        width: this.$el.offsetWidth,\n        height: this.$el.offsetHeight\n      };\n\n      // init filters\n      this.store.states.columns.forEach(column => {\n        if (column.filteredValue && column.filteredValue.length) {\n          this.store.commit('filterChange', {\n            column,\n            values: column.filteredValue,\n            silent: true\n          });\n        }\n      });\n\n      this.$ready = true;\n    },\n\n    data() {\n      const store = new TableStore(this, {\n        rowKey: this.rowKey,\n        defaultExpandAll: this.defaultExpandAll,\n        selectOnIndeterminate: this.selectOnIndeterminate,\n        indent: this.indent,\n        lazy: this.lazy\n      });\n      const layout = new TableLayout({\n        store,\n        table: this,\n        fit: this.fit,\n        showHeader: this.showHeader\n      });\n      return {\n        layout,\n        store,\n        isHidden: false,\n        renderExpanded: null,\n        resizeProxyVisible: false,\n        resizeState: {\n          width: null,\n          height: null\n        },\n        // 是否拥有多级表头\n        isGroup: false,\n        scrollPosition: 'left'\n      };\n    }\n  };\n"]},"sourceType":"script","hash":"f84055ec5cf7cd0fe9f58780b3bb38d0a445d521"}
