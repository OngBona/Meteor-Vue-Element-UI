{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"ClassPrivateProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"/home/dell/Desktop/meteor-vue-element-ui/node_modules/element-ui/packages/form/src/label-wrap.vue","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining",["pipelineOperator",{"proposal":"minimal"}],"throwExpressions","dynamicImport",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"/home/dell/Desktop/meteor-vue-element-ui/node_modules/element-ui/packages/form/src/label-wrap.vue","filename":"/home/dell/Desktop/meteor-vue-element-ui/node_modules/element-ui/packages/form/src/label-wrap.vue","passPerPreset":false,"envName":"development","cwd":"/home/dell/Desktop/meteor-vue-element-ui","root":"/home/dell/Desktop/meteor-vue-element-ui","generatorOpts":{"filename":"/home/dell/Desktop/meteor-vue-element-ui/node_modules/element-ui/packages/form/src/label-wrap.vue","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"/home/dell/Desktop/meteor-vue-element-ui/node_modules/element-ui/packages/form/src/label-wrap.vue"}},"code":"module.exportDefault({\n  props: {\n    isAutoWidth: Boolean,\n    updateAll: Boolean\n  },\n  inject: ['elForm', 'elFormItem'],\n  render: function () {\n    var slots = this.$slots.default;\n    if (!slots) return null;\n\n    if (this.isAutoWidth) {\n      var autoLabelWidth = this.elForm.autoLabelWidth;\n      var style = {};\n\n      if (autoLabelWidth && autoLabelWidth !== 'auto') {\n        style.width = autoLabelWidth;\n      }\n\n      return <div class=\"el-form-item__label-wrap\" style={style}>\n        {slots}\n      </div>;\n    } else {\n      return slots[0];\n    }\n  },\n  methods: {\n    getLabelWidth: function () {\n      if (this.$el && this.$el.firstElementChild) {\n        var computedWidth = window.getComputedStyle(this.$el.firstElementChild).width;\n        return Math.ceil(parseFloat(computedWidth));\n      } else {\n        return 0;\n      }\n    },\n    updateLabelWidth: function () {\n      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'update';\n\n      if (this.$slots.default && this.isAutoWidth && this.$el.firstElementChild) {\n        if (action === 'update') {\n          this.computedWidth = this.getLabelWidth();\n        } else if (action === 'remove') {\n          this.elForm.deregisterLabelWidth(this.computedWidth);\n        }\n      }\n    }\n  },\n  watch: {\n    computedWidth: function (val, oldVal) {\n      if (this.updateAll) {\n        this.elForm.registerLabelWidth(val, oldVal);\n        this.elFormItem.updateComputedLabelWidth(val);\n      }\n    }\n  },\n  data: function () {\n    return {\n      computedWidth: 0\n    };\n  },\n  mounted: function () {\n    this.updateLabelWidth('update');\n  },\n  // Is this necessary?\n  // updated() {\n  //   this.updateLabelWidth('update');\n  // },\n  beforeDestroy: function () {\n    this.updateLabelWidth('remove');\n  }\n});","map":{"version":3,"sources":["/home/dell/Desktop/meteor-vue-element-ui/node_modules/element-ui/packages/form/src/label-wrap.vue"],"names":["module","exportDefault","props","isAutoWidth","Boolean","updateAll","inject","render","slots","$slots","default","autoLabelWidth","elForm","style","width","methods","getLabelWidth","$el","firstElementChild","computedWidth","window","getComputedStyle","Math","ceil","parseFloat","updateLabelWidth","action","deregisterLabelWidth","watch","val","oldVal","registerLabelWidth","elFormItem","updateComputedLabelWidth","data","mounted","beforeDestroy"],"mappings":"AAAAA,MAAM,CAACC,aAAP,CAEe;AACbC,EAAAA,KAAK,EAAE;AACLC,IAAAA,WAAW,EAAEC,OADR;AAELC,IAAAA,SAAS,EAAED;AAFN,GADM;AAMbE,EAAAA,MAAM,EAAE,CAAC,QAAD,EAAW,YAAX,CANK;AAQbC,EAAAA,MARa,cAQJ;AACP,QAAMC,KAAK,GAAG,KAAKC,MAAL,CAAYC,OAA1B;AACA,QAAI,CAACF,KAAL,EAAY,OAAO,IAAP;;AACZ,QAAI,KAAKL,WAAT,EAAsB;AACpB,UAAMQ,cAAc,GAAG,KAAKC,MAAL,CAAYD,cAAnC;AACA,UAAME,KAAK,GAAG,EAAd;;AACA,UAAIF,cAAc,IAAIA,cAAc,KAAK,MAAzC,EAAiD;AAC/CE,QAAAA,KAAK,CAACC,KAAN,GAAcH,cAAd;AACD;;AACD,aAAQ,CAAC,GAAD,CAAK,MAAM,0BAAX,CAAsC,MAAM,CAACE,KAAD,CAA5C;QACN,CAAEL,KAAF;MACF,EAAE,GAAF,CAFA;AAGD,KATD,MASO;AACL,aAAOA,KAAK,CAAC,CAAD,CAAZ;AACD;AACF,GAvBY;AAyBbO,EAAAA,OAAO,EAAE;AACPC,IAAAA,aADO,cACS;AACd,UAAI,KAAKC,GAAL,IAAY,KAAKA,GAAL,CAASC,iBAAzB,EAA4C;AAC1C,YAAMC,aAAa,GAAGC,MAAM,CAACC,gBAAP,CAAwB,KAAKJ,GAAL,CAASC,iBAAjC,EAAoDJ,KAA1E;AACA,eAAOQ,IAAI,CAACC,IAAL,CAAUC,UAAU,CAACL,aAAD,CAApB,CAAP;AACD,OAHD,MAGO;AACL,eAAO,CAAP;AACD;AACF,KARM;AASPM,IAAAA,gBATO,cAS6B;AAAA,UAAnBC,MAAmB,uEAAV,QAAU;;AAClC,UAAI,KAAKjB,MAAL,CAAYC,OAAZ,IAAuB,KAAKP,WAA5B,IAA2C,KAAKc,GAAL,CAASC,iBAAxD,EAA2E;AACzE,YAAIQ,MAAM,KAAK,QAAf,EAAyB;AACvB,eAAKP,aAAL,GAAqB,KAAKH,aAAL,EAArB;AACD,SAFD,MAEO,IAAIU,MAAM,KAAK,QAAf,EAAyB;AAC9B,eAAKd,MAAL,CAAYe,oBAAZ,CAAiC,KAAKR,aAAtC;AACD;AACF;AACF;AAjBM,GAzBI;AA6CbS,EAAAA,KAAK,EAAE;AACLT,IAAAA,aADK,YACSU,GADT,EACcC,MADd,EACsB;AACzB,UAAI,KAAKzB,SAAT,EAAoB;AAClB,aAAKO,MAAL,CAAYmB,kBAAZ,CAA+BF,GAA/B,EAAoCC,MAApC;AACA,aAAKE,UAAL,CAAgBC,wBAAhB,CAAyCJ,GAAzC;AACD;AACF;AANI,GA7CM;AAsDbK,EAAAA,IAtDa,cAsDN;AACL,WAAO;AACLf,MAAAA,aAAa,EAAE;AADV,KAAP;AAGD,GA1DY;AA4DbgB,EAAAA,OA5Da,cA4DH;AACR,SAAKV,gBAAL,CAAsB,QAAtB;AACD,GA9DY;AAgEb;AACA;AACA;AACA;AAEAW,EAAAA,aArEa,cAqEG;AACd,SAAKX,gBAAL,CAAsB,QAAtB;AACD;AAvEY,CAFf","sourcesContent":["\n\nexport default {\n  props: {\n    isAutoWidth: Boolean,\n    updateAll: Boolean\n  },\n\n  inject: ['elForm', 'elFormItem'],\n\n  render() {\n    const slots = this.$slots.default;\n    if (!slots) return null;\n    if (this.isAutoWidth) {\n      const autoLabelWidth = this.elForm.autoLabelWidth;\n      const style = {};\n      if (autoLabelWidth && autoLabelWidth !== 'auto') {\n        style.width = autoLabelWidth;\n      }\n      return (<div class=\"el-form-item__label-wrap\" style={style}>\n        { slots }\n      </div>);\n    } else {\n      return slots[0];\n    }\n  },\n\n  methods: {\n    getLabelWidth() {\n      if (this.$el && this.$el.firstElementChild) {\n        const computedWidth = window.getComputedStyle(this.$el.firstElementChild).width;\n        return Math.ceil(parseFloat(computedWidth));\n      } else {\n        return 0;\n      }\n    },\n    updateLabelWidth(action = 'update') {\n      if (this.$slots.default && this.isAutoWidth && this.$el.firstElementChild) {\n        if (action === 'update') {\n          this.computedWidth = this.getLabelWidth();\n        } else if (action === 'remove') {\n          this.elForm.deregisterLabelWidth(this.computedWidth);\n        }\n      }\n    }\n  },\n\n  watch: {\n    computedWidth(val, oldVal) {\n      if (this.updateAll) {\n        this.elForm.registerLabelWidth(val, oldVal);\n        this.elFormItem.updateComputedLabelWidth(val);\n      }\n    }\n  },\n\n  data() {\n    return {\n      computedWidth: 0\n    };\n  },\n\n  mounted() {\n    this.updateLabelWidth('update');\n  },\n\n  // Is this necessary?\n  // updated() {\n  //   this.updateLabelWidth('update');\n  // },\n\n  beforeDestroy() {\n    this.updateLabelWidth('remove');\n  }\n};\n"]},"sourceType":"script","hash":"b713b251f9e744a2f81609971e11967911fd380e"}
